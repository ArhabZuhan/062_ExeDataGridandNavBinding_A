<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAP0SURBVHhe7Zq5
        q9RQFMaf4IYKau2ChWih1uJWiZWNa6eNWNjYiFuhrWunoE9UBMW/QixUxF1wawTRQkURXHArXL9vmO8R
        TnJJ8m5Och/MD34wd8k9ZzJvkjP3ZWjAgBEmwqPwLfyXmG/gEcgc3WCAouApeRi6wbPMIMt7rbRYCZkb
        c3RDZzlV3POzAW5C9ckbUJSN27GqirJ244QCWkXRGBVFY1UUZe3GKQtYt9003uvnAsS2m8Z7/VwAta2i
        aIyKorEqirJ249gAvKCpT16HomzcjlVVlLUbxz1AJO75qRBi0ZEaqyBze91rOcEyU2c5VQ9BN/hDgydB
        fwkpyU+eb971x5BFwS2h/tHSVpzatJVYW3FKSXk/4AM8DsdDN8bCfgA/IDe62g+YAXnr3QH5Bi/Ba/Ax
        fAk/wj9QJ+F7v+8VfAavQh5zDG6HK+BMWBsF8GYK3AyH4XOouE36F/LknIYb4WRYig4WsfsBlnnwDPwM
        s8d8hXfgBbgXboGr4SI4C/LTnA4FX7OPY5zDuTyGx3INrvUNZmN8gjzhc2AQTRbZBbKKojFaxC74A3Kc
        n85tyISXQo8LG9fk2ozBWIzJ2Pz6sG8czGHfQGxb7ITs5/f4LJwP24YxGVvXkt0wh30DsW3xHrJ/Q6/V
        LcyBubzrtQz2DahtFUVj1KJ+Xoy6ZhMM5ZkbiN0PEBrjn995uAC2zULI2NnbaY7gQCRa92fmNa/U++Ay
        OAE2Ddfk2oxxFxblkMNrP0ABeQs6CXlLUh/llfkevAj3w61wDVwM50Le8lgsCb5mH8eWQM7lMTyWa9yH
        uuNIxjwBZ2f6cnjvBwgWJWshKzfeon7Bovkxcs1bkJUlY2ULIc3J4b0fEGIaZPnKYuYg5HeV5e1D+AIy
        H5a+v/vyNfs49gBy7jl4AHINlvJTYYiyfEYITay8QJ+6872pnE9oYuUF+tSd700wH+/9gFQI5uO9HxCL
        +zpe+wEKGFsJBhOvQa1KsCm07pirBJvaD9BY8pWgHVDbKorGqEX9yVeCdiC2LWx/spWgHYhti1C/SKYS
        tANqW0XRGLWE+rsimI8d4AVNfTJmPyAVgvl4Jeq17mgJ5qNCyGs/IBWC+XjvByRfCXrvB8RWglpnNFSq
        BL1QwOQrQS8UMPlK0AsbMNlK0IuygMnuCTZF6wFLGJyAvq0xOAF9Y0ltncro3+MpVYKF/x73gg8jMGhK
        e4J8YqU1+DgKH0thwaNPsatKkDnsgZ3Ah5r41FZXleApyBw6ZxJcD/nE2FOY/YHSlFzzCWSMdZAxk4Wf
        KCvBbZD/nboMr8BHUFXgF6g3x9eqBjmHc3kMf8lyDa6VfaxuwIAgQ0P/AQ7DvIO8053JAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>